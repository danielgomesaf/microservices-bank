spring.application.name=configserver

# native - for configs in classpath
# then we inform were in the classpath to find the configs
# spring.profiles.active=native
# spring.cloud.config.server.native.search-locations=classpath:/config

# To read from the filesystem
#spring.cloud.config.server.native.search-locations=file:///C://config

# To read from github location
spring.profiles.active=git
spring.cloud.config.server.git.uri=https://github.com/danielgomesaf/microservices-config.git
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.default-label=main

server.port=8071

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# spring.security.user.name=root
# spring.security.user.password=s3cr3t

# This property will be used as a key to encrypt
# and decrypt the config properties
# for training purposes, this value is hardcoded, but
# in real applications, it can be stored inside a environment variable
# inside the server or it can be read from another secure location
# and it should be a complex value
encrypt.key=danielgomesaf/bankapplication